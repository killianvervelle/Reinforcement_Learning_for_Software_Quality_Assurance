name: RL Workflow

on: 
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-3
  ECR_REPOSITORY: my_ecr_repository           
  ECS_SERVICE: my_ecs_service                 
  ECS_CLUSTER: my_ecs_cluster                 
  ECS_TASK_DEFINITION: ppo/app/task-definition.json

jobs:
  build-sut-image:
    runs-on: ubuntu-latest
    environment: production
    env:
        IMAGE_TAG: sut
    outputs:
      output: ${{ steps.build-sut.outputs.sut_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push SUT image to Amazon ECR
        id: build-sut
        env:
          IMAGE_TAG: sut
        run: |
          docker build --no-cache -f ppo/app/src/sut/Dockerfile \
            -t ${{ steps.login-ecr.outputs.registry }}/${{env.ECR_REPOSITORY}}:$IMAGE_TAG ppo/
          docker push ${{ steps.login-ecr.outputs.registry }}/${{env.ECR_REPOSITORY}}:$IMAGE_TAG
          echo "sut_image=${{env.ECR_REPOSITORY}}:$IMAGE_TAG" >> $GITHUB_ENV
          echo "sut_image=${{env.ECR_REPOSITORY}}:$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      - name: Use SUT image in ECS task definition
        run: |
          echo "SUT image: $sut_image" 

  build-api-image:
    runs-on: ubuntu-latest
    environment: production
    env:
        IMAGE_TAG: api
    outputs:
      output: ${{ steps.build-api.outputs.api_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push API image to Amazon ECR
        id: build-api
        run: |
          docker build --no-cache -f ppo/app/src/api/Dockerfile \
            -t ${{ steps.login-ecr.outputs.registry }}/${{env.ECR_REPOSITORY}}:$IMAGE_TAG ppo/
          docker push ${{ steps.login-ecr.outputs.registry }}/${{env.ECR_REPOSITORY}}:$IMAGE_TAG
          echo "api_image=${{env.ECR_REPOSITORY}}:$IMAGE_TAG" >> $GITHUB_ENV
          echo "api_image=${{env.ECR_REPOSITORY}}:$IMAGE_TAG" >> $GITHUB_OUTPUT
      
      - name: Use API image in ECS task definition
        run: |
          echo "API image: $api_image"
          





