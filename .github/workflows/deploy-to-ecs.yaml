name: RL Workflow

on: 
  push:
    branches:
      - main

env:
  AWS_REGION: eu-west-3
  ECR_REPOSITORY: my_ecr_repository           
  ECS_SERVICE: my_ecs_service
  ECS_SERVICE_TORCH: my_ecs_service_torch 
  ECS_CLUSTER: my_ecs_cluster                 
  ECS_TASK_DEFINITION_MAIN: ppo/src/ecs-task-main.json
  ECS_TASK_DEFINITION_TORCH: ppo/src/ecs-task-pytorch.json
  TASK_DEFINITION_MAIN: my-ecs-task
  TASK_DEFINITION_TORCH: my-ecs-task-torch


jobs:

  build-image:
    runs-on: ubuntu-latest
    environment: production
    env:
        IMAGE_TAG: endpoint
    outputs:
      output: ${{ steps.build.outputs.sut_api_image }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push SUT image to Amazon ECR
        id: build
        env:
          IMAGE_TAG: endpoint
        run: |
          docker build --no-cache -f ppo/src/sagemaker/Dockerfile /
            -t ${{ steps.login-ecr.outputs.registry }}/${{env.ECR_REPOSITORY}}:$IMAGE_TAG /
          docker push ${{ steps.login-ecr.outputs.registry }}/${{env.ECR_REPOSITORY}}:$IMAGE_TAG
         

  